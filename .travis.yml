# .travis.yml file based on:
# https://gist.github.com/dan-blanchard/7045057

language: python
python:
  - "2.7"
  - "3.5"
env:
  - ATOM=0.3
  - ATOM=1.0
matrix:
  exclude:
    - python: "3.5"
      env: ATOM=0.3
    - python: "2.7"
      env: ATOM=1.0

install:
  # Setup anaconda. See http://conda.pydata.org/docs/travis.html

  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # Create conda environment with dependencies
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy bokeh h5py jupyter scipy networkx future
  - source activate test-environment
  - if [[ $ATOM == 0.3 ]]; then conda install --yes atom; fi
  - if [[ $ATOM == 1.0 ]]; then pip install cppy; pip install git+https://github.com/nucleic/atom.git@1.0.0-dev; fi
  - pip install watchdog coveralls

  # download and extract test data
  - if [[ $TRAVIS_PYTHON_VERSION = 2.7 ]]; then export TEST_DATA="https://drive.google.com/uc?export=download&id=0BxaPKTZqyVchaXc1V3hlejRaY2M"; fi
  - if [[ $TRAVIS_PYTHON_VERSION = 3.5 ]]; then export TEST_DATA="https://drive.google.com/uc?export=download&id=0B2sNiahoh0BZSzNPakRSMWgzQW8"; fi
  - wget $TEST_DATA -O test_data.tar.gz
  - tar xzvf test_data.tar.gz -C tests/

script:
  - coverage run -m unittest discover
after_script:
  - coveralls

# necessary to run on new container-based infrastructure
sudo: false

cache:
  directories:
    - $HOME/download
    - $HOME/.cache/pip
